// Copyright (c) 2023-2024 The solominer developers
// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.

//////////////////////////////////////////////////////////////////////////////
#include <coins/coins.h>
#include <coins/cores.h>

#include "bitoreum-core.h"

//////////////////////////////////////////////////////////////////////////////
namespace solominer {

//////////////////////////////////////////////////////////////////////////////
template<> const char *coin::btrm::CCoreParent::getName() { return BTRM_CORE_NAME; }
template<> const char *coin::btrm::CCoreParent::getCoin() { return BTRM_COIN_NAME; }

//////////////////////////////////////////////////////////////////////////////
namespace coin::btrm {

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//! COIN

class CCoinBTRM : public CCoin {
public:
    CCoinBTRM() : CCoin( BTRM_CHAIN_NAME ,BTRM_COIN_NAME ,BTRM_POWALGORITHM ,BTRM_DEV_ADDRESS )
    {}
};

//! register
static bool g_hasCoin = CCoinStore::getInstance().RegisterItem( BTRM_COIN_NAME ,RefOf<CCoin>( new CCoinBTRM() ) );

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//! CORE

static IServiceSetupRef g_coreSetup( new CCoreSetup() );

static iresult_t g_hasCore = getCoreStore().registerServiceSupport( BTRM_CORE_NAME ,g_coreSetup );

//////////////////////////////////////////////////////////////////////////////
} //namespace coin::btrm

//////////////////////////////////////////////////////////////////////////////
} //namespace solominer

//////////////////////////////////////////////////////////////////////////////
//EOF